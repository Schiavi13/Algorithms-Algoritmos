Merge(A,p,q,r)                                  //take a look at BookPseudocode first, to identify the differences
    n1 = q-p+1
    n2 = r-q
    let L[1...n1] and R[1...n2] be new arrays
    
    for i=1 to n1
        L[i] = A[p+i-1]
        
    for j=1 to n2
        R[j] = A[q+j]
        
    i = 1                                      //not only initializes both iterators, but also initializes the iterator for the
    j = 1                                      //entire subarray, since it will be handled with while loops
    k = p
    
    while i<=n1 and j<=n2                      //the loop breaks when one of the arrays (not the subarray) reaches its length+1
        if L[i] <= R[j]
            A[k] = L[i]
            i = i+1
        else
            A[k] = R[j]
            j = j+1
        k = k+1
        
    while i<= n1                               //fills the subarray with the rest of the array that still has items in it
        A[k] = L[i]
        i = i+1
        k = k+1
        
    while j<= n2
        A[k] = R[j]
        j = j+1
        k = k+1

Merge-Sort(A,p,r)                       
    if p<r
        q = [(p+r)/2]
        Merge-Sort(A,p,q)
        Merge-Sort(A,q+1,r)
        Merge(A,p,q,r)
